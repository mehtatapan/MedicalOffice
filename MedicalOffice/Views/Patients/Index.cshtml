@model IEnumerable<MedicalOffice.Models.Patient>

@{
    ViewData["Title"] = "Patient Index";
}

<h2>Patient Index</h2>

<p>
    <a asp-action="Create">Create New Patient</a>
    @if (User.IsInRole("Admin"))
    {
        <a asp-action="DownloadAppointments" class="btn btn-info float-right"><text class="d-none d-md-inline">Download </text>Appointment Report</a>
    }
</p>
<form asp-action="Index" method="get">
    <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
    <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
    <div class="form-horizontal">
        <button class="btn @(ViewData["Filtering"])" type="button" data-toggle="collapse" id="filterToggle" data-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
            <text class="d-none d-lg-inline">Filter</text><text class="d-inline d-lg-none">Filter/Sort</text>
        </button>
        <div class="collapse" id="collapseFilter">
            <div class="d-block d-lg-none">
                <div class="form-group">
                    <label class="control-label">Sort By:</label>
                    <div class="input-group">
                        <div class="input-group-prepend">
                            <div class="input-group-text">
                                <input type="checkbox" class="" value="desc"
                                       @((ViewData["sortDirection"].ToString() != "asc" ? "checked=\"checked\"" : ""))
                                       name="sortDirectionCheck" />&nbsp;&nbsp;Descending
                            </div>
                        </div>
                        <select name="sortFieldID" class="form-control" asp-items="ViewBag.sortFieldID"></select>
                    </div>
                </div>
            </div>
            <div class="card card-body bg-light">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">Select by Doctor:</label>
                        @Html.DropDownList("DoctorID", null, "All Doctors", htmlAttributes: new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-6">
                        <label class="control-label">Filter by Medical Trial:</label>
                        @Html.DropDownList("MedicalTrialID", null, "None", htmlAttributes: new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            <label class="control-label">Filter by Condition:</label>
                            @Html.DropDownList("ConditionID", null, "All Conditions", htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Search Patient Name:</label>
                        @Html.TextBox("SearchString", null, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-4 align-self-end">
                        <input type="submit" name="actionButton" value="Apply" class="btn btn-outline-primary" />
                        <a asp-action="Index" class="btn btn-outline-dark">Clear</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="container-fluid d-block d-lg-none">
        <div class="card-deck-wrapper">
            <div class="card-deck">
                @foreach (var item in Model)
                {
                    //Make a card for each one
                    <div class="card mb-sm-3" style="min-width: 18rem;">
                        <h5 class="card-header"><strong>@Html.DisplayFor(modelItem => item.FullName)</strong></h5>
                        <div class="card-body">
                            <div class="media">
                                @{
                                    if (item.PatientThumbnail?.Content != null)
                                    {
                                        string imageBase64 = Convert.ToBase64String(item.PatientThumbnail.Content);
                                        string imageSrc = string.Format("data:" + item.PatientThumbnail.MimeType + ";base64,{0}", imageBase64);
                                        <img src="@imageSrc" alt="Profile Picture of @item.FullName" title="Profile Picture of @item.FullName" style="max-height: 80px; max-width: 96px" class="img-fluid rounded" />
                                    }
                                    else
                                    {
                                        <img src="~/images/blankProfile.jpg" style="max-height: 80px; max-width: 96px" class="img-fluid rounded" />
                                    }
                                }
                                <div class="media-body ml-2">
                                    <p class="card-text">
                                        <strong>Age:</strong> @Html.DisplayFor(modelItem => item.Age)<br />
                                        <strong>Exp. Visits/Year:</strong> @Html.DisplayFor(modelItem => item.ExpYrVisits)<br />
                                        <strong>Doctor:</strong> @Html.DisplayFor(modelItem => item.Doctor.FullName)<br />
                                        <strong>Medical Trial:</strong> @{
                                            if (item.InMedicalTrial == "Yes")
                                            {
                                                <a tabindex="0" class="" role="button" data-toggle="popover"
                                                   data-trigger="focus" title="Medical Trial" data-placement="bottom"
                                                   data-content="@item.MedicalTrial.TrialName">
                                                    @Html.DisplayFor(modelItem => item.InMedicalTrial)
                                                </a>
                                            }
                                            else
                                            {
                                                @Html.DisplayFor(modelItem => item.InMedicalTrial)
                                            }
                                        }<br />
                                        <strong>History: </strong>@{
                                            int condCount = item.PatientConditions.Count;
                                            if (condCount > 0)
                                            {
                                                string firstCond = item.PatientConditions.FirstOrDefault().Condition.ConditionName;
                                                if (condCount > 1)
                                                {
                                                    string condList = firstCond;
                                                    var c = item.PatientConditions.ToList();
                                                    for (int i = 1; i < condCount; i++)
                                                    {
                                                        condList += ", " + c[i].Condition.ConditionName;
                                                    }
                                                    <a tabindex="0" class="" role="button" data-toggle="popover"
                                                       data-trigger="focus" title="Conditions" data-placement="bottom"
                                                       data-content="@condList">
                                                        @firstCond... <span class="badge badge-info">@condCount</span>
                                                    </a>
                                                }
                                                else
                                                {
                                                    @firstCond
                                                }
                                            }
                                        }
                                    </p>

                                </div>
                            </div>
                            <div class="card-footer">
                                <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                                <a asp-action="Index" asp-controller="PatientAppt" asp-route-PatientID="@item.ID">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>

    <table class="table d-none d-lg-block">
        <thead>
            <tr>
                <th></th>
                <th>
                    <input type="submit" name="actionButton" value="Patient" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Age" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Visits/Yr" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" disabled="disabled" value="Medical Trial" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" disabled="disabled" value="History" class="btn btn-link" />
                </th>
                <th>
                    <input type="submit" name="actionButton" value="Doctor" class="btn btn-link" />
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @{
                            if (item.PatientThumbnail?.Content != null)
                            {
                                string imageBase64 = Convert.ToBase64String(item.PatientThumbnail.Content);
                                string imageSrc = string.Format("data:" + item.PatientThumbnail.MimeType + ";base64,{0}", imageBase64);
                                <img src="@imageSrc" alt="Profile Picture of @item.FullName" title="Profile Picture of @item.FullName" class="img-fluid rounded" />
                            }
                        }
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Age)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ExpYrVisits)
                    </td>
                    <td>
                        @{
                            if (item.InMedicalTrial == "Yes")
                            {
                                <a tabindex="0" class="" role="button" data-toggle="popover"
                                   data-trigger="focus" title="Medical Trial" data-placement="bottom"
                                   data-content="@item.MedicalTrial.TrialName">
                                    @Html.DisplayFor(modelItem => item.InMedicalTrial)
                                </a>
                            }
                            else
                            {
                                @Html.DisplayFor(modelItem => item.InMedicalTrial)
                            }
                        }
                    </td>
                    <td>
                        @{
                            int condCount = item.PatientConditions.Count;
                            if (condCount > 0)
                            {
                                string firstCond = item.PatientConditions.FirstOrDefault().Condition.ConditionName;
                                if (condCount > 1)
                                {
                                    string condList = firstCond;
                                    var c = item.PatientConditions.ToList();
                                    for (int i = 1; i < condCount; i++)
                                    {
                                        condList += ", " + c[i].Condition.ConditionName;
                                    }
                                    <a tabindex="0" class="" role="button" data-toggle="popover"
                                       data-trigger="focus" title="Conditions" data-placement="bottom"
                                       data-content="@condList">
                                        @firstCond... <span class="badge badge-info">@condCount</span>
                                    </a>
                                }
                                else
                                {
                                    @firstCond
                                }
                            }
                        }
                        @*For help with Bootstrap Popovers see: https://getbootstrap.com/docs/4.3/components/popovers/*@
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Doctor.FullName)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ID">Edit</a> |
                        <a asp-action="Index" asp-controller="PatientAppt" asp-route-PatientID="@item.ID">Details</a> |
                        <a asp-action="Delete" asp-route-id="@item.ID">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_PagingNavBar" />
</form>
@section Scripts {
    <script type="text/javascript">
        $(function () {
            $('[data-toggle="popover"]').popover();
        });
    </script>
}
